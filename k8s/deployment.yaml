# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operacao-chuva
spec:
  replicas: 1
  selector:
    matchLabels:
      app: operacao-chuva
  template:
    metadata:
      labels:
        app: operacao-chuva
    spec:
      containers:
      - name: operacao-chuva
        image: gcr.io/$PROJECT_ID/$IMAGE_OPERACAO_CHUVA:$GITHUB_SHA
        command: ['cp', '/mnt/*', '/root/.basedosdados/credentials/']
        volumeMounts:
          - name: staging-config
            mountPath: /mnt/staging.json
            # mountPath: /root/.basedosdados/credentials/staging.json
            subPath: staging.json
            readOnly: false
          - name: prod-config
            mountPath: /mnt/prod.json
            # mountPath: /root/.basedosdados/credentials/prod.json
            subPath: prod.json
            readOnly: false
        env:
          - name: BASEDOSDADOS_CONFIG
            valueFrom:
              secretKeyRef:
                name: envs
                key: BASEDOSDADOS_CONFIG
          - name: BASEDOSDADOS_CREDENTIALS_PROD
            valueFrom:
              secretKeyRef:
                name: envs
                key: BASEDOSDADOS_CREDENTIALS_PROD
          - name: BASEDOSDADOS_CREDENTIALS_STAGING
            valueFrom:
              secretKeyRef:
                name: envs
                key: BASEDOSDADOS_CREDENTIALS_STAGING
          - name: GOOGLE_APPLICATION_CREDENTIALS
            valueFrom:
              secretKeyRef:
                name: envs
                key: GOOGLE_APPLICATION_CREDENTIALS
      volumes:
        - name: staging-config
          configMap:
            name: cred-staging
        - name: prod-config
          configMap:
            name: cred-prod
---
# Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: operacao-chuva
  name: operacao-chuva
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    app: operacao-chuva
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: operacao-chuva-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 200m
spec:
  tls:
    - hosts:
        - operacao-chuva.mobilidade.rio
      secretName: operacao-chuva-tls
  rules:
    - host: operacao-chuva.mobilidade.rio
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: operacao-chuva
                port:
                  number: 80
---
# Issuer
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    email: borismarinho.smtr@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-production
    solvers:
      - http01:
          ingress:
            class: nginx
